package com.jilit.irp.persistence.dto;
// Generated Dec 19, 2009 12:17:52 PM by Hibernate Tools 3.2.1.GA


import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;

/**
 * Programscheme generated by hbm2java
 */
public class ProgramScheme  implements java.io.Serializable {


     private ProgramSchemeId id;
  //   private BasketMaster basketmaster;
     private ProgramMaster programmaster;
     private SectionMaster sectionmaster;
     private SubjectMaster subjectmaster;
     private DepartmentMaster departmentmaster;
     private ElectiveMaster electivemaster;
     private String programid;
     private String sectionid;
     private byte stynumber;
     private String basketid;
     private String subjectid;
     private String departmentid;
     private String deactive;
     private byte credits;
     private String electiveid;
     private Double totalmarks;
     private Double passingmarks;
     private String tthide; 

     private Set<ProgramSchemeDetail> programschemedetails = new HashSet<ProgramSchemeDetail>(0);




    public ProgramScheme() {
    }

     public ProgramScheme(ProgramScheme dto,boolean childReqd) {
         this.id = dto.getId();
         this.programid = dto.getProgramid();
         this.sectionid = dto.getSectionid();
         this.stynumber = dto.getStynumber();
         this.basketid = dto.getBasketid();
         this.subjectid = dto.getSubjectid();
         this.departmentid = dto.getDepartmentid();
         this.deactive = dto.getDeactive();
         this.credits = dto.getCredits();
         this.electiveid = dto.getElectiveid();
         /* if(childReqd){
               if(!dto.getProgramschemedetails().isEmpty()){
                    this.programschemedetails.add(new ProgramSchemeDetail((ProgramSchemeDetail)dto.getProgramschemedetails().toArray()[0]));

               }
         }*/

            if(childReqd){
         if(!dto.getProgramschemedetails().isEmpty()){

               for (Iterator<ProgramSchemeDetail> it = dto.getProgramschemedetails().iterator(); it.hasNext();) {
               this.programschemedetails.add(new ProgramSchemeDetail(it.next(),true));
               }
            }
          }
     }

    public ProgramScheme(ProgramSchemeId id,ProgramMaster programmaster, SectionMaster sectionmaster, SubjectMaster subjectmaster, byte stynumber) {
        this.id = id;
     
        this.programmaster = programmaster;
        this.sectionmaster = sectionmaster;
        this.subjectmaster = subjectmaster;
        this.stynumber = stynumber;
    }
    public ProgramScheme(ProgramSchemeId id,  ProgramMaster programmaster, SectionMaster sectionmaster, SubjectMaster subjectmaster, DepartmentMaster departmentmaster, ElectiveMaster  electivemaster, byte stynumber, String deactive, byte credits, Set programschemedetails) {
       this.id = id;
     
       this.programmaster = programmaster;
       this.sectionmaster = sectionmaster;
       this.subjectmaster = subjectmaster;
       this.departmentmaster = departmentmaster;
       this.electivemaster = electivemaster;
       this.stynumber = stynumber;
       this.deactive = deactive;
       this.credits = credits;
       this.programschemedetails = programschemedetails;
    }

    public ProgramSchemeId getId() {
        return this.id;
    }

    public void setId(ProgramSchemeId id) {
        this.id = id;
    }

     public String getProgramid() {
        return programid;
    }

    public void setProgramid(String programid) {
        this.programid = programid;
    }

    public String getSectionid() {
        return sectionid;
    }

    public void setSectionid(String sectionid) {
        this.sectionid = sectionid;
    }

    

    public ProgramMaster getProgrammaster() {
        return programmaster;
    }

    public void setProgrammaster(ProgramMaster programmaster) {
        this.programmaster = programmaster;
    }

    public SectionMaster getSectionmaster() {
        return this.sectionmaster;
    }

    public void setSectionmaster(SectionMaster sectionmaster) {
        this.sectionmaster = sectionmaster;
    }
    public SubjectMaster getSubjectmaster() {
        return this.subjectmaster;
    }

    public void setSubjectmaster(SubjectMaster subjectmaster) {
        this.subjectmaster = subjectmaster;
    }
    public DepartmentMaster getDepartmentmaster() {
        return this.departmentmaster;
    }

    public void setDepartmentmaster(DepartmentMaster departmentmaster) {
        this.departmentmaster = departmentmaster;
    }
    public byte getStynumber() {
        return this.stynumber;
    }

    public void setStynumber(byte stynumber) {
        this.stynumber = stynumber;
    }

     public String getBasketid() {
        return basketid;
    }

    public void setBasketid(String basketid) {
        this.basketid = basketid;
    }

    public String getSubjectid() {
        return subjectid;
    }

    public void setSubjectid(String subjectid) {
        this.subjectid = subjectid;
    }

    public String getDepartmentid() {
        return departmentid;
    }

    public void setDepartmentid(String departmentid) {
        this.departmentid = departmentid;
    }

    public String getDeactive() {
        return this.deactive;
    }

    public void setDeactive(String deactive) {
        this.deactive = deactive;
    }

    public byte getCredits() {
        return credits;
    }

    public void setCredits(byte credits) {
        this.credits = credits;
    }

    public String getElectiveid() {
        return electiveid;
    }

    public void setElectiveid(String electiveid) {
        this.electiveid = electiveid;
    }

    public Set<ProgramSchemeDetail> getProgramschemedetails() {
        return programschemedetails;
    }

    public void setProgramschemedetails(Set<ProgramSchemeDetail> programschemedetails) {
        this.programschemedetails = programschemedetails;
    }

    public String getIdStr(){
        return id.getInstituteid()+"::"+id.getProgramschemeid();
    }

    public ElectiveMaster getElectivemaster() {
        return electivemaster;
    }

    public void setElectivemaster(ElectiveMaster electivemaster) {
        this.electivemaster = electivemaster;
    }

    public Double getPassingmarks() {
        return passingmarks;
    }

    public void setPassingmarks(Double passingmarks) {
        this.passingmarks = passingmarks;
    }

    public Double getTotalmarks() {
        return totalmarks;
    }

    public void setTotalmarks(Double totalmarks) {
        this.totalmarks = totalmarks;
    }

    public String getTthide() {
        return tthide;
    }

    public void setTthide(String tthide) {
        this.tthide = tthide;
    }

   



}


